import streamlit as st
st.set_page_config(page_title="Credit Coach BCC", page_icon="üè¶")
import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
import seaborn as sns
import hashlib

# –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã
st.markdown("""
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;700&display=swap');

    * {
        font-family: 'Montserrat', sans-serif !important;
    }
    html, body, [class*="css"] {
        font-family: 'Montserrat', sans-serif !important;
    }
    button, input, select, label, .stButton, .stTextInput, .stSlider, .stSelectbox {
        font-family: 'Montserrat', sans-serif !important;
        font-weight: 500 !important;
        font-size: 18px !important;
    }
    .main {
        background-color: #FFFFFF !important;
    }
    .stButton>button {
        background-color: #00A859;
        color: white;
        border-radius: 5px;
        display: block;
        margin: 0 auto;
        padding: 10px 20px;
    }
    .metric-container {
        border: 2px solid green;
        border-radius: 8px;
        padding: 10px;
        text-align: center;
        transition: border-color 0.3s ease;
    }
    .metric-container-low {
        border: 2px solid red;
        border-radius: 8px;
        padding: 10px;
        text-align: center;
        transition: border-color 0.3s ease;
    }
    h1, h2, h3 {
        color: #00A859;
        text-align: center !important;
    }
    .center-text {
        text-align: center !important;
        color: #333;
    }
    .approval-circle {
        width: 300px;
        height: 300px;
        border-radius: 50%;
        border: 3px solid #00A859;
        background-color: transparent;
        color: #00A859;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 36px;
        font-weight: bold;
        margin: 20px auto;
    }
    .approval-circle.red {
        border-color: #FF0000 !important;
        color: #FF0000 !important;
    }
    .approval-text {
        text-align: center;
        color: #00A859;
        font-weight: bold;
    }
    .approval-text.red {
        color: #FF0000 !important;
    }
    .stSlider, .stTextInput, .stSelectbox, .stForm {
        background-color: #FFFFFF !important;
    }
    .stSlider > div, .stTextInput > div, .stSelectbox > div {
        background-color: #FFFFFF !important;
    }
    /* –°—Ç–∏–ª–∏ –¥–ª—è —á–∞—Ç-–±–æ—Ç–∞ */
    .chatbot-button {
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 60px;
        height: 60px;
        background-color: #00A859;
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        cursor: pointer;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        z-index: 1000;
    }
    .chatbot {
        position: fixed;
        bottom: 90px;
        right: 20px;
        width: 350px;
        height: 500px;
        background-color: #f9f9f9;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        display: flex;
        flex-direction: column;
        z-index: 1000;
    }
    .chatbot-header {
        background-color: #00A859;
        color: white;
        padding: 10px;
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
        text-align: center;
        font-weight: bold;
    }
    .chatbot-body {
        flex: 1;
        padding: 10px;
        overflow-y: auto;
        background-color: #fff;
    }
    .chatbot-input {
        display: flex;
        padding: 10px;
        border-top: 1px solid #ddd;
    }
    .chatbot-input input {
        flex: 1;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 5px;
        margin-right: 10px;
    }
    .chatbot-input button {
        padding: 8px 15px;
        background-color: #00A859;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
    .chatbot-message {
        margin: 5px 0;
        padding: 8px;
        border-radius: 5px;
    }
    .chatbot-message.user {
        background-color: #00A859;
        color: white;
        text-align: right;
    }
    .chatbot-message.bot {
        background-color: #e0e0e0;
        text-align: left;
    }
    .logo-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-bottom: 20px;
    }
    </style>
""", unsafe_allow_html=True)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
st.markdown('<div class="logo-container">', unsafe_allow_html=True)
st.image("images/bcclog.png", width=600, use_container_width=False)
st.image("images/aichan.jpg", width=200, use_column_width="always")
st.markdown('</div>', unsafe_allow_html=True)

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
np.random.seed(42)
n_samples = 1000
data = {
    'income': np.random.normal(300000, 50000, n_samples),
    'late_payments': np.random.randint(0, 5, n_samples),
    'account_balance': np.random.normal(50000, 10000, n_samples),
    'fines': np.random.randint(0, 3, n_samples),
    'tax_debt': np.random.normal(5000, 2000, n_samples),
    'active_loans': np.random.randint(0, 5, n_samples),
    'credit_score': np.random.randint(300, 850, n_samples)
}
df = pd.DataFrame(data)
X = df[['income', 'late_payments', 'account_balance', 'fines', 'tax_debt', 'active_loans']]
y = df['credit_score']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# –§—É–Ω–∫—Ü–∏—è-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è API eGov.kz
def check_egov_data(iin):
    if not iin or len(iin) != 12 or not iin.isdigit():
        return 0, 0.0
    hash_val = int(hashlib.sha256(iin.encode()).hexdigest(), 16)
    fines = (hash_val % 3) + (1 if (hash_val % 100) > 80 else 0)
    tax_debt = abs(np.random.normal(5000, 2000) + (hash_val % 1000))
    return fines, round(tax_debt, 2)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∞–∫—Ç–æ—Ä–æ–≤ (–∑–∞–≥–ª—É—à–∫–∞)
def analyze_client_factors(client_data, feature_importances):
    factors = ['–î–æ—Ö–æ–¥—ã', '–ü—Ä–æ—Å—Ä–æ—á–∫–∏', '–ë–∞–ª–∞–Ω—Å —Å—á—ë—Ç–∞', '–®—Ç—Ä–∞—Ñ—ã', '–ù–∞–ª–æ–≥–∏', '–ö—Ä–µ–¥–∏—Ç—ã']
    result = []
    for i, (value, importance) in enumerate(zip(client_data, feature_importances)):
        if value > 0 and importance > 0.1:
            result.append(f"{factors[i]}: –∑–Ω–∞—á–µ–Ω–∏–µ {value:.2f}, –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–µ–π—Ç–∏–Ω–≥")
    return result if result else ["–ù–µ—Ç –∑–Ω–∞—á–∏–º—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤"]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –æ–¥–æ–±—Ä–µ–Ω–∏—è
def approval_probability(credit_score, monthly_payment, income, active_loans, loan_payments, late_payments, fines, tax_debt, age, loan_amount, loan_term_months, iin, has_credit_history=True, has_permanent_registration=True, has_valid_documents=True, has_criminal_record=False):
    if loan_amount < 60000 or loan_amount > 7_000_000:
        return False, f"–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 60,000 ‚Ç∏ –¥–æ 7,000,000 ‚Ç∏ (–∑–∞–ø—Ä–æ—à–µ–Ω–æ: {loan_amount:,} ‚Ç∏)", 0
    if loan_term_months < 6 or loan_term_months > 60:
        return False, f"–°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 6 –¥–æ 60 –º–µ—Å—è—Ü–µ–≤ (–∑–∞–ø—Ä–æ—à–µ–Ω–æ: {loan_term_months} –º–µ—Å—è—Ü–µ–≤)", 0
    if age < 21 or age > 68:
        return False, f"–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 21 –¥–æ 68 –ª–µ—Ç (–≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç: {age})", 0
    if not has_valid_documents:
        return False, "–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã", 0
    if not has_permanent_registration:
        return False, "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –∑–æ–Ω–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –±–∞–Ω–∫–∞", 0
    if has_criminal_record:
        return False, "–ù–∞–ª–∏—á–∏–µ —Å—É–¥–∏–º–æ—Å—Ç–∏ –ø–æ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–º –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è–º", 0

    annual_rate = 0.20
    monthly_rate = annual_rate / 12
    monthly_payment = (loan_amount * monthly_rate * (1 + monthly_rate) ** loan_term_months) / ((1 + monthly_rate) ** loan_term_months - 1)

    free_balance = income - loan_payments
    max_payment = free_balance * 0.4

    probability = 0
    if credit_score >= 750:
        probability = 95
    elif credit_score >= 650:
        probability = 80
    elif credit_score >= 600:
        probability = 60
    elif credit_score >= 500:
        probability = 40
    else:
        probability = 20

    weights = {
        'debt_load': 0.3,
        'late_payments': 0.25,
        'fines': 0.15,
        'tax_debt': 0.15,
        'active_loans': 0.1,
        'credit_history': 0.05
    }

    if monthly_payment > max_payment:
        excess_ratio = (monthly_payment - max_payment) / max_payment
        probability *= (1 - weights['debt_load'] * min(1, excess_ratio))
    if late_payments > 0:
        probability *= (1 - weights['late_payments'] * min(1, late_payments / 5))
    if fines > 0:
        probability *= (1 - weights['fines'] * min(1, fines / 3))
    if tax_debt > 0:
        probability *= (1 - weights['tax_debt'] * min(1, tax_debt / 20000))
    if active_loans > 2:
        probability *= (1 - weights['active_loans'] * min(1, (active_loans - 2) / 3))
    if not has_credit_history:
        probability *= (1 - weights['credit_history'])
    if age > 60:
        probability *= 0.9

    probability = max(0, min(100, probability))
    approved = probability >= 70
    return approved, f"–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏—è: {probability:.0f}%", probability

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –∑–∞–ª–æ–≥–æ–≤–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–∞
def collateral_loan_calculation(collateral_value, loan_amount, loan_term_months, income, loan_payments, age, iin):
    fines, tax_debt = check_egov_data(iin)
    max_loan_amount = collateral_value * 0.7
    if loan_amount > max_loan_amount:
        return 0, 0, False, 0, f"–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 70% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–ª–æ–≥–∞ (–º–∞–∫—Å–∏–º—É–º: {max_loan_amount:,} ‚Ç∏)"
    if loan_amount > 150_000_000:
        return 0, 0, False, 0, "–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –º–∞–∫—Å–∏–º—É–º (150 –º–ª–Ω ‚Ç∏)"
    if loan_term_months < 3 or loan_term_months > 120:
        return 0, 0, False, 0, f"–°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 3 –¥–æ 120 –º–µ—Å—è—Ü–µ–≤ (–∑–∞–ø—Ä–æ—à–µ–Ω–æ: {loan_term_months} –º–µ—Å—è—Ü–µ–≤)"

    annual_rate = 0.225
    monthly_rate = annual_rate / 12
    monthly_payment = (loan_amount * monthly_rate * (1 + monthly_rate) ** loan_term_months) / ((1 + monthly_rate) ** loan_term_months - 1)

    free_balance = income - loan_payments
    max_payment = free_balance * 0.4
    probability = 70
    if monthly_payment > max_payment:
        excess_ratio = (monthly_payment - max_payment) / max_payment
        probability -= min(40, excess_ratio * 40)
    if age > 68:
        probability -= 30
    if fines > 0:
        probability -= fines * 10
    if tax_debt > 0:
        probability -= min(25, tax_debt / 5000 * 15)

    probability = max(0, min(100, probability))
    approved = probability >= 60
    return max_loan_amount, monthly_payment, approved, probability, ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–∏–∑–Ω–µ—Å-–∫—Ä–µ–¥–∏—Ç–∞
def business_loan_calculation(loan_amount, loan_term_months, income, loan_payments, business_type, purpose, iin):
    fines, tax_debt = check_egov_data(iin)
    max_loan = 20_000_000 if business_type == "–ò–ü" else 100_000_000
    max_term = 36 if purpose == "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±–æ—Ä–æ—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤" else 120
    if loan_amount < 150_000 or loan_amount > max_loan:
        return 0, False, 0, f"–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 150,000 ‚Ç∏ –¥–æ {max_loan:,} ‚Ç∏ (–∑–∞–ø—Ä–æ—à–µ–Ω–æ: {loan_amount:,} ‚Ç∏)"
    if loan_term_months < 6 or loan_term_months > max_term:
        return 0, False, 0, f"–°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 6 –¥–æ {max_term} –º–µ—Å—è—Ü–µ–≤ (–∑–∞–ø—Ä–æ—à–µ–Ω–æ: {loan_term_months} –º–µ—Å—è—Ü–µ–≤)"

    annual_rate = 0.2445
    monthly_rate = annual_rate / 12
    monthly_payment = (loan_amount * monthly_rate * (1 + monthly_rate) ** loan_term_months) / ((1 + monthly_rate) ** loan_term_months - 1)

    free_balance = income - loan_payments
    max_payment = free_balance * 0.4
    probability = 60
    if monthly_payment > max_payment:
        excess_ratio = (monthly_payment - max_payment) / max_payment
        probability -= min(40, excess_ratio * 40)
    if fines > 0:
        probability -= fines * 10
    if tax_debt > 0:
        probability -= min(25, tax_debt / 5000 * 15)

    probability = max(0, min(100, probability))
    approved = probability >= 60
    return monthly_payment, approved, probability, ""

# –ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
def generate_recommendations(client_data, loan_amount, loan_term_months, iin, loan_payments, age, has_credit_history=True, has_permanent_registration=True, has_valid_documents=True, has_criminal_record=False):
    fines, tax_debt = check_egov_data(iin)
    client_data[3] = fines
    client_data[4] = tax_debt
    current_score = model.predict([client_data])[0]
    monthly_payment = (loan_amount * (0.20 / 12) * (1 + 0.20 / 12) ** loan_term_months) / ((1 + 0.20 / 12) ** loan_term_months - 1)
    free_balance = client_data[0] - loan_payments
    recommendations = {
        'financial': [],
        'legal': [],
        'personal': []
    }
    loan_suggestions = []
    quick_actions = []

    # –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if client_data[1] > 0:
        rec_text = (
            f"–£–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç, —É –≤–∞—Å –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ **{client_data[1]} –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π**, —á—Ç–æ —Å–Ω–∏–∂–∞–µ—Ç –≤–∞—à –∫—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ —à–∞–Ω—Å—ã –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞. "
            "–ü—Ä–æ—Å—Ä–æ—á–∫–∏ —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É—é—Ç –±–∞–Ω–∫–∞–º –æ –≤—ã—Å–æ–∫–æ–º —Ä–∏—Å–∫–µ, –ø–æ—ç—Ç–æ–º—É –∏—Ö —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ ‚Äî –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –∑–∞–¥–∞—á–∞.\n"
            "**–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å:**\n"
            "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–∫ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ë–¶–ö (—Ä–∞–∑–¥–µ–ª '–ö—Ä–µ–¥–∏—Ç—ã' ‚Üí '–ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π') –∏–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ –ü–µ—Ä–≤–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –±—é—Ä–æ (www.1cb.kz).\n"
            "2. –ü–æ–≥–∞—Å–∏—Ç–µ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ë–¶–ö, –∫–∞—Å—Å—É –±–∞–Ω–∫–∞ –∏–ª–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª—ã Qiwi/Kaspi. –ù–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–≥–∞—à–µ–Ω–∏–µ –ø—Ä–æ—Å—Ä–æ—á–∫–∏ –≤ 50,000 ‚Ç∏ –º–æ–∂–µ—Ç –ø–æ–≤—ã—Å–∏—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏—è –Ω–∞ 15‚Äì20%.\n"
            "3. –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ (3‚Äì5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π) –∏ –ø–æ–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É.\n"
            "**–°–æ–≤–µ—Ç:** –ù–∞—á–Ω–∏—Ç–µ —Å —Å–∞–º—ã—Ö —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Å—Ä–æ—á–µ–∫ –∏–ª–∏ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º–∏ —Å—É–º–º–∞–º–∏.\n"
        )
        recommendations['financial'].append(rec_text)
        quick_actions.append(("–ü–æ–≥–∞—Å–∏—Ç—å –ø—Ä–æ—Å—Ä–æ—á–∫–∏", "https://cabinet.bcc.kz"))

    if client_data[3] > 0:
        rec_text = (
            f"–£ –≤–∞—Å –µ—Å—Ç—å **{client_data[3]} –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö —à—Ç—Ä–∞—Ñ–æ–≤** (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ü–î–î), —á—Ç–æ —Å–Ω–∏–∂–∞–µ—Ç –≤–∞—à –∫—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥. "
            "–ë–∞–Ω–∫–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –±–∞–∑—É –ö–ì–î, –∏ –¥–∞–∂–µ –Ω–µ–±–æ–ª—å—à–∏–µ —à—Ç—Ä–∞—Ñ—ã (–æ—Ç 5,000 ‚Ç∏) –º–æ–≥—É—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ.\n"
            "**–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å:**\n"
            "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —à—Ç—Ä–∞—Ñ–æ–≤ –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ eGov.kz (—Ä–∞–∑–¥–µ–ª '–®—Ç—Ä–∞—Ñ—ã') –∏–ª–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ë–¶–ö.\n"
            "2. –û–ø–ª–∞—Ç–∏—Ç–µ —à—Ç—Ä–∞—Ñ—ã —á–µ—Ä–µ–∑ eGov.kz, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Kaspi –∏–ª–∏ –≤ –æ—Ç–¥–µ–ª–µ–Ω–∏–∏ –±–∞–Ω–∫–∞. –ü–æ–≥–∞—à–µ–Ω–∏–µ —à—Ç—Ä–∞—Ñ–∞ –≤ 10,000 ‚Ç∏ –º–æ–∂–µ—Ç –ø–æ–≤—ã—Å–∏—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏—è –Ω–∞ 5‚Äì10%.\n"
            "3. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏—é –∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –ö–ì–î (3‚Äì5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π).\n"
            "**–°–æ–≤–µ—Ç:** –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —à—Ç—Ä–∞—Ñ—ã —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ '–°–µ—Ä–≥–µ–∫' –∏–ª–∏ —Å–∞–π—Ç –ú–í–î –†–ö.\n"
        )
        recommendations['legal'].append(rec_text)
        quick_actions.append(("–û–ø–ª–∞—Ç–∏—Ç—å —à—Ç—Ä–∞—Ñ—ã", "https://egov.kz/services/10108"))

    if client_data[4] > 0:
        rec_text = (
            f"–í–∞—à–∞ –Ω–∞–ª–æ–≥–æ–≤–∞—è –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç **{client_data[4]:.2f} ‚Ç∏**, —á—Ç–æ —è–≤–ª—è–µ—Ç—Å—è —Å–µ—Ä—å—ë–∑–Ω—ã–º –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ–º –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞. "
            "–ë–∞–Ω–∫–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –ö–ì–î, –∏ –¥–∞–∂–µ –¥–æ–ª–≥–∏ –æ—Ç 2,000 ‚Ç∏ –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –æ—Ç–∫–∞–∑—É.\n"
            "**–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å:**\n"
            "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—É–º–º—É –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞ eGov.kz (—Ä–∞–∑–¥–µ–ª '–ù–∞–ª–æ–≥–∏' ‚Üí '–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å') –∏–ª–∏ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ –Ω–∞–ª–æ–≥–æ–ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞ (cabinet.kgd.gov.kz).\n"
            "2. –ü–æ–≥–∞—Å–∏—Ç–µ –¥–æ–ª–≥ —á–µ—Ä–µ–∑ eGov.kz, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ë–¶–ö –∏–ª–∏ –≤ –∫–∞—Å—Å–µ –±–∞–Ω–∫–∞. –ü–æ–≥–∞—à–µ–Ω–∏–µ 20,000 ‚Ç∏ –º–æ–∂–µ—Ç –ø–æ–≤—ã—Å–∏—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏—è –Ω–∞ 10‚Äì15%.\n"
            "3. –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –ö–ì–î (5‚Äì7 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π).\n"
            "**–°–æ–≤–µ—Ç:** –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ—Ç –ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π –∑–∞ –ø—Ä–æ—à–ª—ã–µ –≥–æ–¥—ã (–Ω–∞–ª–æ–≥ –Ω–∞ –∏–º—É—â–µ—Å—Ç–≤–æ –∏–ª–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç).\n"
        )
        recommendations['legal'].append(rec_text)
        quick_actions.append(("–ü–æ–≥–∞—Å–∏—Ç—å –Ω–∞–ª–æ–≥–∏", "https://egov.kz/services/10108"))

    if client_data[5] > 2:
        rec_text = (
            f"–£ –≤–∞—Å **{client_data[5]} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤**, —á—Ç–æ —Å–æ–∑–¥–∞—ë—Ç –≤—ã—Å–æ–∫—É—é –¥–æ–ª–≥–æ–≤—É—é –Ω–∞–≥—Ä—É–∑–∫—É (–±–æ–ª–µ–µ 50% –¥–æ—Ö–æ–¥–∞). "
            "–ë–¶–ö –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π –∫ –¥–æ—Ö–æ–¥—É (PTI), –∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ 40% —Å–Ω–∏–∂–∞–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏—è.\n"
            "**–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å:**\n"
            "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–µ–∫—É—â–∏–µ –∫—Ä–µ–¥–∏—Ç—ã –Ω–∞ www.1cb.kz –∏–ª–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ë–¶–ö.\n"
            "2. –ü–æ–≥–∞—Å–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –∫—Ä–µ–¥–∏—Ç–æ–≤, –Ω–∞—á–∏–Ω–∞—è —Å —Å–∞–º–æ–≥–æ –¥–æ—Ä–æ–≥–æ–≥–æ (–≤—ã—Å–æ–∫–∞—è —Å—Ç–∞–≤–∫–∞) –∏–ª–∏ —Å –Ω–∞–∏–º–µ–Ω—å—à–∏–º –æ—Å—Ç–∞—Ç–∫–æ–º. –ó–∞–∫—Ä—ã—Ç–∏–µ –∫—Ä–µ–¥–∏—Ç–∞ —Å –ø–ª–∞—Ç–µ–∂–æ–º 30,000 ‚Ç∏ –ø–æ–≤—ã—Å–∏—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –Ω–∞ 10‚Äì20%.\n"
            "3. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –ë–¶–ö, —á—Ç–æ–±—ã –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –∫—Ä–µ–¥–∏—Ç—ã –≤ –æ–¥–∏–Ω —Å –Ω–∏–∑–∫–æ–π —Å—Ç–∞–≤–∫–æ–π.\n"
            "**–°–æ–≤–µ—Ç:** –°–Ω–∏–∑—å—Ç–µ —Å—É–º–º—É –Ω–æ–≤–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–∞ –∏–ª–∏ —É–≤–µ–ª–∏—á—å—Ç–µ —Å—Ä–æ–∫, —á—Ç–æ–±—ã —É–º–µ–Ω—å—à–∏—Ç—å –ø–ª–∞—Ç—ë–∂.\n"
        )
        recommendations['financial'].append(rec_text)
        quick_actions.append(("–†–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞—Ç—å –∫—Ä–µ–¥–∏—Ç—ã", "https://bcc.kz/loans/refinancing"))

    if free_balance < monthly_payment * 0.4:
        rec_text = (
            f"–í–∞—à —Å–≤–æ–±–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ —Ç–µ–∫—É—â–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π: **{free_balance:.2f} ‚Ç∏**, –Ω–æ –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç—ë–∂ –ø–æ –∫—Ä–µ–¥–∏—Ç—É: **{monthly_payment:.2f} ‚Ç∏**, "
            "—á—Ç–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º—É—é –Ω–∞–≥—Ä—É–∑–∫—É (40% –±–∞–ª–∞–Ω—Å–∞). –ë–¶–ö —Ç—Ä–µ–±—É–µ—Ç, —á—Ç–æ–±—ã –ø–ª–∞—Ç–µ–∂–∏ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–ª–∏ 40‚Äì50% –¥–æ—Ö–æ–¥–∞.\n"
            "**–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å:**\n"
            f"1. –£–º–µ–Ω—å—à–∏—Ç–µ —Å—É–º–º—É –∫—Ä–µ–¥–∏—Ç–∞. –°–Ω–∏–∂–µ–Ω–∏–µ —Å {loan_amount:,} ‚Ç∏ –¥–æ {free_balance * 0.4 * loan_term_months:,.0f} ‚Ç∏ —É–ª–æ–∂–∏—Ç—Å—è –≤ –Ω–∞–≥—Ä—É–∑–∫—É.\n"
            f"2. –£–≤–µ–ª–∏—á—å—Ç–µ —Å—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ {int(loan_amount / (free_balance * 0.4)) + 1} –º–µ—Å—è—Ü–µ–≤, —á—Ç–æ–±—ã —Å–Ω–∏–∑–∏—Ç—å –ø–ª–∞—Ç—ë–∂ –¥–æ {loan_amount / (int(loan_amount / (free_balance * 0.4)) + 1):.2f} ‚Ç∏.\n"
            "3. –£–≤–µ–ª–∏—á—å—Ç–µ –¥–æ—Ö–æ–¥, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–≤ —Å–ø—Ä–∞–≤–∫—É –æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–æ—Ö–æ–¥–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç –∞—Ä–µ–Ω–¥—ã).\n"
            "**–°–æ–≤–µ—Ç:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –Ω–∞ —Å–∞–π—Ç–µ –ë–¶–ö –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.\n"
        )
        recommendations['financial'].append(rec_text)
        quick_actions.append(("–ü–æ–¥–æ–±—Ä–∞—Ç—å –∫—Ä–µ–¥–∏—Ç", "https://bcc.kz/loans/calculator"))

    if age < 21 or age > 68:
        rec_text = (
            f"–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç ({age} –ª–µ—Ç) –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –ë–¶–ö (21‚Äì68 –ª–µ—Ç). "
            "–í–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω—ã —Å –æ—Ü–µ–Ω–∫–æ–π –ø–ª–∞—Ç—ë–∂–µ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∏ —Ä–∏—Å–∫–æ–≤.\n"
            "**–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å:**\n"
            "1. –ï—Å–ª–∏ –≤—ã –º–ª–∞–¥—à–µ 21 –≥–æ–¥–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω—É–∂–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏–ª–∏ –Ω–∞–π–¥–∏—Ç–µ —Å–æ–∑–∞—ë–º—â–∏–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–æ–¥–∏—Ç–µ–ª—è) —Å —Ö–æ—Ä–æ—à–µ–π –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π.\n"
            "2. –ï—Å–ª–∏ –≤—ã —Å—Ç–∞—Ä—à–µ 68 –ª–µ—Ç, —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∑–∞–ª–æ–≥–æ–≤—ã–π –∫—Ä–µ–¥–∏—Ç, –≥–¥–µ –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –º–µ–Ω–µ–µ —Å—Ç—Ä–æ–≥–∏–µ.\n"
            "**–°–æ–≤–µ—Ç:** –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ –ë–¶–ö –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –æ –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö –¥–ª—è –≤–∞—à–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞.\n"
        )
        recommendations['personal'].append(rec_text)
        quick_actions.append(("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", "https://bcc.kz/contacts"))

    if not has_credit_history:
        rec_text = (
            "–£ –≤–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è, —á—Ç–æ –∑–∞—Ç—Ä—É–¥–Ω—è–µ—Ç –æ—Ü–µ–Ω–∫—É –≤–∞—à–µ–π –ø–ª–∞—Ç—ë–∂–µ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–∞–Ω–∫–æ–º.\n"
            "**–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å:**\n"
            "1. –û—Ñ–æ—Ä–º–∏—Ç–µ –Ω–µ–±–æ–ª—å—à–æ–π –∫—Ä–µ–¥–∏—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ 100,000 ‚Ç∏) –∏–ª–∏ –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∫–∞—Ä—Ç—É –≤ –ë–¶–ö –∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø–æ–≥–∞—à–∞–µ—Ç–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é.\n"
            "2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞—Ä—Ç—É –¥–ª—è –º–µ–ª–∫–∏—Ö –ø–æ–∫—É–ø–æ–∫ –∏ –≤–æ–≤—Ä–µ–º—è –≤–Ω–æ—Å–∏—Ç–µ –ø–ª–∞—Ç–µ–∂–∏ (3‚Äì6 –º–µ—Å—è—Ü–µ–≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ).\n"
            "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞ www.1cb.kz.\n"
            "**–°–æ–≤–µ—Ç:** –ù–∞—á–Ω–∏—Ç–µ —Å –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç—ã —Å –ª–∏–º–∏—Ç–æ–º 50,000 ‚Ç∏, —á—Ç–æ–±—ã –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∏—Å–∫–∏.\n"
        )
        recommendations['financial'].append(rec_text)
        quick_actions.append(("–û—Ñ–æ—Ä–º–∏—Ç—å –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∫–∞—Ä—Ç—É", "https://bcc.kz/cards"))

    if not has_permanent_registration:
        rec_text = (
            "–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –∑–æ–Ω–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –±–∞–Ω–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏—á–∏–Ω–æ–π –æ—Ç–∫–∞–∑–∞.\n"
            "**–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å:**\n"
            "1. –û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –¶–û–ù–µ –ø–æ –º–µ—Å—Ç—É –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞.\n"
            "2. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –ø—Ä–∏ –ø–æ–¥–∞—á–µ –∑–∞—è–≤–∫–∏.\n"
            "3. –£—Ç–æ—á–Ω–∏—Ç–µ –∑–æ–Ω—É –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –ë–¶–ö –Ω–∞ —Å–∞–π—Ç–µ –∏–ª–∏ –≤ –∫–æ–ª–ª-—Ü–µ–Ω—Ç—Ä–µ.\n"
            "**–°–æ–≤–µ—Ç:** –í—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–∂–µ—Ç –Ω–µ –ø–æ–¥–æ–π—Ç–∏, —É—Ç–æ—á–Ω–∏—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤ –æ—Ç–¥–µ–ª–µ–Ω–∏–∏.\n"
        )
        recommendations['legal'].append(rec_text)
        quick_actions.append(("–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –¶–û–ù", "https://egov.kz/services/10101"))

    if not has_valid_documents:
        rec_text = (
            "–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏) —è–≤–ª—è—é—Ç—Å—è –ø—Ä–∏—á–∏–Ω–æ–π –æ—Ç–∫–∞–∑–∞.\n"
            "**–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å:**\n"
            "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ –¥—Ä—É–≥–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.\n"
            "2. –û–±–Ω–æ–≤–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –¶–û–ù–µ, –µ—Å–ª–∏ –æ–Ω–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω—ã.\n"
            "3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –≤ –∞–Ω–∫–µ—Ç–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ (–§–ò–û, –ò–ò–ù).\n"
            "**–°–æ–≤–µ—Ç:** –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –ø–æ–ª–Ω—ã–π –ø–∞–∫–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∑–∞—Ä–∞–Ω–µ–µ, –≤–∫–ª—é—á–∞—è —Å–ø—Ä–∞–≤–∫—É –æ –¥–æ—Ö–æ–¥–∞—Ö.\n"
        )
        recommendations['legal'].append(rec_text)
        quick_actions.append(("–û–±–Ω–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã", "https://egov.kz/services/10101"))

    if has_criminal_record:
        rec_text = (
            "–ù–∞–ª–∏—á–∏–µ —Å—É–¥–∏–º–æ—Å—Ç–∏ (–æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–º –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è–º) —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏—á–∏–Ω–æ–π –æ—Ç–∫–∞–∑–∞.\n"
            "**–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å:**\n"
            "1. –£—Ç–æ—á–Ω–∏—Ç–µ, –º–æ–∂–Ω–æ –ª–∏ —Å–Ω—è—Ç—å —Å—É–¥–∏–º–æ—Å—Ç—å –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É –æ –µ—ë –ø–æ–≥–∞—à–µ–Ω–∏–∏ –≤ —Å—É–¥–µ.\n"
            "2. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –ø–æ–¥–∞—á—É –∑–∞—è–≤–∫–∏ —Å —Å–æ–∑–∞—ë–º—â–∏–∫–æ–º, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç —Å—É–¥–∏–º–æ—Å—Ç–µ–π.\n"
            "3. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ë–¶–ö –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –æ –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö –¥–ª—è –≤–∞—à–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏.\n"
            "**–°–æ–≤–µ—Ç:** –ó–∞–ª–æ–≥–æ–≤—ã–µ –∫—Ä–µ–¥–∏—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã, —Ç–∞–∫ –∫–∞–∫ —Ä–∏—Å–∫–∏ –¥–ª—è –±–∞–Ω–∫–∞ –Ω–∏–∂–µ.\n"
        )
        recommendations['personal'].append(rec_text)
        quick_actions.append(("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", "https://bcc.kz/contacts"))

    approved, approval_reason, probability = approval_probability(
        current_score, monthly_payment, client_data[0], client_data[5], loan_payments, 
        client_data[1], fines, tax_debt, age, loan_amount, loan_term_months, iin,
        has_credit_history, has_permanent_registration, has_valid_documents, has_criminal_record
    )

    if not approved:
        new_term = int(loan_amount / (free_balance * 0.4)) + 1 if free_balance > 0 else loan_term_months
        new_payment = loan_amount / new_term
        loan_suggestions.append(
            f"–£–≤–µ–ª–∏—á—å—Ç–µ —Å—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ {new_term} –º–µ—Å—è—Ü–µ–≤, —á—Ç–æ–±—ã —Å–Ω–∏–∑–∏—Ç—å –ø–ª–∞—Ç—ë–∂ –¥–æ {new_payment:.2f} ‚Ç∏. "
            "–≠—Ç–æ —É–º–µ–Ω—å—à–∏—Ç –¥–æ–ª–≥–æ–≤—É—é –Ω–∞–≥—Ä—É–∑–∫—É –∏ –ø–æ–≤—ã—Å–∏—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏—è."
        )
        new_amount = free_balance * 0.4 * loan_term_months
        loan_suggestions.append(
            f"–£–º–µ–Ω—å—à–∏—Ç–µ —Å—É–º–º—É –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ {new_amount:.2f} ‚Ç∏ –ø—Ä–∏ —Å—Ä–æ–∫–µ {loan_term_months} –º–µ—Å—è—Ü–µ–≤, "
            "—á—Ç–æ–±—ã —É–ª–æ–∂–∏—Ç—å—Å—è –≤ –¥–æ–ø—É—Å—Ç–∏–º—É—é –Ω–∞–≥—Ä—É–∑–∫—É (40% –±–∞–ª–∞–Ω—Å–∞)."
        )
        quick_actions.append(("–ü–æ–¥–æ–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –∫—Ä–µ–¥–∏—Ç", "https://bcc.kz/loans"))

    if not any(recommendations.values()):
        rec_text = (
            "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤ –æ—Ç–ª–∏—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏: –Ω–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–∫, —à—Ç—Ä–∞—Ñ–æ–≤, –Ω–∞–ª–æ–≥–æ–≤—ã—Ö –¥–æ–ª–≥–æ–≤, "
            "–∞ –¥–æ–ª–≥–æ–≤–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –≤ –Ω–æ—Ä–º–µ. –í—ã ‚Äî –∏–¥–µ–∞–ª—å–Ω—ã–π –∫–∞–Ω–¥–∏–¥–∞—Ç –¥–ª—è –∫—Ä–µ–¥–∏—Ç–∞ –≤ –ë–¶–ö.\n"
            "**–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å:**\n"
            "1. –ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ë–¶–ö –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–¥–æ–±—Ä–µ–Ω–∏—è (5 –º–∏–Ω—É—Ç).\n"
            "2. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –ª—å–≥–æ—Ç–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∫—Ä–µ–¥–∏—Ç—ã –ø–æ–¥ 7% –ø–æ –≥–æ—Å–ø—Ä–æ–≥—Ä–∞–º–º–∞–º.\n"
            "3. –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –Ω–∞ www.1cb.kz, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥.\n"
            "**–°–æ–≤–µ—Ç:** –î–ª—è –∫—Ä—É–ø–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤ (–∏–ø–æ—Ç–µ–∫–∞) —É—Ç–æ—á–Ω–∏—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º.\n"
        )
        recommendations['financial'].append(rec_text)
        quick_actions.append(("–û—Ñ–æ—Ä–º–∏—Ç—å –∫—Ä–µ–¥–∏—Ç", "https://cabinet.bcc.kz/loans/apply"))

    return recommendations, loan_suggestions, current_score, approved, probability, quick_actions

# –ù–∞–≤–∏–≥–∞—Ü–∏—è
st.sidebar.title("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
page = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É", ["–ë–µ–∑–∑–∞–ª–æ–≥–æ–≤—ã–π –∫—Ä–µ–¥–∏—Ç", "–ó–∞–ª–æ–≥–æ–≤—ã–π –∫—Ä–µ–¥–∏—Ç", "–ö—Ä–µ–¥–∏—Ç—ã –¥–ª—è –±–∏–∑–Ω–µ—Å–∞"])

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Å–µ—Å—Å–∏–∏
if "client_data" not in st.session_state:
    st.session_state.client_data = {
        "income": 400000,
        "loan_payments": 20000
    }

# –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: –ë–µ–∑–∑–∞–ª–æ–≥–æ–≤—ã–π –∫—Ä–µ–¥–∏—Ç
if page == "–ë–µ–∑–∑–∞–ª–æ–≥–æ–≤—ã–π –∫—Ä–µ–¥–∏—Ç":
    st.markdown("<h1 style='font-weight: 700;'>Credit Coach BCC</h1>", unsafe_allow_html=True)
    st.markdown("""
    <h3 class='center-text'>
    –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à –∫—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    </h3>
    """, unsafe_allow_html=True)

    with st.form("client_form"):
        iin = st.text_input("–ò–ò–ù (12 —Ü–∏—Ñ—Ä, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)", max_chars=12)
        cols = st.columns(2)
        with cols[0]:
            income = st.number_input("–ó–∞—Ä–ø–ª–∞—Ç–∞ (‚Ç∏)", min_value=0, value=400000, step=1000)
            late_payments = st.selectbox("–ü—Ä–æ—Å—Ä–æ—á–∫–∏", [0, 1, 2, 3, 4, 5])
            age = st.number_input("–í–æ–∑—Ä–∞—Å—Ç", min_value=18, value=30, step=1)
            has_credit_history = st.checkbox("–ï—Å—Ç—å –∫—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è", value=True)
        with cols[1]:
            loan_payments = st.number_input("–ü–ª–∞—Ç–µ–∂–∏ –ø–æ –∫—Ä–µ–¥–∏—Ç–∞–º (‚Ç∏/–º–µ—Å—è—Ü)", min_value=0, value=20000, step=1000)
            active_loans = st.selectbox("–ê–∫—Ç–∏–≤–Ω—ã–µ –∫—Ä–µ–¥–∏—Ç—ã", [0, 1, 2, 3, 4, 5])
            has_permanent_registration = st.checkbox("–ï—Å—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", value=True)
            has_valid_documents = st.checkbox("–î–æ–∫—É–º–µ–Ω—Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã", value=True)
            has_criminal_record = st.checkbox("–ï—Å—Ç—å —Å—É–¥–∏–º–æ—Å—Ç—å", value=False)
        st.markdown("<div style='margin-top: 20px;'><b>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫—Ä–µ–¥–∏—Ç–∞</b></div>", unsafe_allow_html=True)
        cols = st.columns(2)
        with cols[0]:
            loan_amount = st.number_input("–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ (‚Ç∏)", min_value=60000, max_value=7000000, value=1000000, step=10000)
        with cols[1]:
            loan_term_months = st.slider("–°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ (–º–µ—Å—è—Ü—ã)", 6, 60, 12)
        submitted = st.form_submit_button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å")

    if submitted:
        if not iin or len(iin) != 12 or not iin.isdigit():
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ò–ò–ù (12 —Ü–∏—Ñ—Ä).")
        else:
            client_data = [income, late_payments, 50000, 0, 0, active_loans]
            recommendations, loan_suggestions, current_score, approved, probability, quick_actions = generate_recommendations(
                client_data, loan_amount, loan_term_months, iin, loan_payments, age,
                has_credit_history, has_permanent_registration, has_valid_documents, has_criminal_record
            )

            st.header("–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏—è –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏")
            st.markdown(f"<div class='approval-circle {'red' if probability < 70 else ''}'>{probability:.0f}%</div>", unsafe_allow_html=True)

            # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞
            metric_class = "metric-container" if probability >= 60 else "metric-container-low"
            st.markdown(
                f"""
                <div class="{metric_class}">
                    <h3>–ö—Ä–µ–¥–∏—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥</h3>
                    <p style="font-size: 24px; font-weight: bold;">{current_score:.0f}</p>
                </div>
                """,
                unsafe_allow_html=True
            )

            for category, recs in recommendations.items():
                if recs:
                    st.subheader("–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞")
                    for rec in recs:
                        st.markdown(rec)

            if loan_suggestions:
                st.subheader("–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫—Ä–µ–¥–∏—Ç–∞")
                for suggestion in loan_suggestions:
                    st.write(f"- {suggestion}")

            st.subheader("–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è")
            for action_text, url in quick_actions:
                st.link_button(action_text, url)

            st.subheader("–§–∞–∫—Ç–æ—Ä—ã –≤–ª–∏—è–Ω–∏—è –Ω–∞ –≤–∞—à —Ä–µ–π—Ç–∏–Ω–≥")
            client_factors = analyze_client_factors(client_data, model.feature_importances_)
            for factor in client_factors:
                st.write(f"- {factor}")

            factors = ['–î–æ—Ö–æ–¥—ã', '–ü—Ä–æ—Å—Ä–æ—á–∫–∏', '–®—Ç—Ä–∞—Ñ—ã', '–ù–∞–ª–æ–≥–∏', '–ö—Ä–µ–¥–∏—Ç—ã']
            importance = model.feature_importances_[[0, 1, 3, 4, 5]]
            fig, ax = plt.subplots(figsize=(10, 6))
            sns.barplot(x=importance, y=factors, palette=['#00A859'] * len(factors))
            ax.set_xlabel("–í–∞–∂–Ω–æ—Å—Ç—å —Ñ–∞–∫—Ç–æ—Ä–∞", fontsize=12)
            ax.grid(True, axis='x', linestyle='--', alpha=0.7)
            plt.tight_layout()
            st.pyplot(fig)

# –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: –ó–∞–ª–æ–≥–æ–≤—ã–π –∫—Ä–µ–¥–∏—Ç
elif page == "–ó–∞–ª–æ–≥–æ–≤—ã–π –∫—Ä–µ–¥–∏—Ç":
    st.markdown("<h1 style='font-weight: 700;'>Credit Coach BCC</h1>", unsafe_allow_html=True)
    st.markdown("""
    <h3 class='center-text'>
    –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —É—Å–ª–æ–≤–∏—è –∑–∞–ª–æ–≥–æ–≤–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–∞
    </h3>
    """, unsafe_allow_html=True)

    with st.form("collateral_form"):
        st.markdown("**–î–∞–Ω–Ω—ã–µ –æ –∑–∞–ª–æ–≥–µ**")
        collateral_value = st.number_input("–û—Ü–µ–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–ª–æ–≥–∞ (‚Ç∏)", min_value=1000000, value=5000000, step=100000)
        loan_amount = st.number_input("–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ (‚Ç∏)", min_value=100000, value=2500000, step=10000)
        loan_term_months = st.slider("–°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ (–º–µ—Å—è—Ü—ã)", 3, 120, 36)

        st.markdown("**–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ**")
        iin = st.text_input("–ò–ò–ù (12 —Ü–∏—Ñ—Ä, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)", max_chars=12)
        if not iin or len(iin) != 12 or not iin.isdigit():
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ò–ò–ù (12 —Ü–∏—Ñ—Ä).")

        cols = st.columns(2)
        with cols[0]:
            income = st.number_input("–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞ (‚Ç∏)", min_value=0, value=st.session_state.client_data["income"], step=1000)
        with cols[1]:
            loan_payments = st.number_input("–ü–ª–∞—Ç–µ–∂–∏ –ø–æ —Ç–µ–∫—É—â–∏–º –∫—Ä–µ–¥–∏—Ç–∞–º (‚Ç∏/–º–µ—Å—è—Ü)", min_value=0, value=st.session_state.client_data["loan_payments"], step=1000)

        age = st.number_input("–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç", min_value=18, value=30, step=1)

        submitted = st.form_submit_button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å")
        if submitted and (not iin or len(iin) != 12 or not iin.isdigit()):
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–µ –ò–ò–ù –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
            submitted = False

    if submitted:
        max_loan_amount, monthly_payment, approved, probability, error = collateral_loan_calculation(
            collateral_value, loan_amount, loan_term_months, income, loan_payments, age, iin
        )

        st.header("–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏—è –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏")
        if error:
            st.error(error)
        else:
            if approved:
                st.markdown("**–ö—Ä–µ–¥–∏—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–¥–æ–±—Ä–µ–Ω ‚úÖ**", unsafe_allow_html=True)
            else:
                st.markdown("**–ö—Ä–µ–¥–∏—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –æ–¥–æ–±—Ä–µ–Ω ‚ùå**", unsafe_allow_html=True)

            color_class = "red" if probability < 60 else ""
            st.markdown(f"""
                <div class="approval-circle {color_class}">{probability:.0f}%</div>
                <p class="approval-text {color_class}">–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞</p>
            """, unsafe_allow_html=True)

            st.metric("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ (‚Ç∏)", f"{max_loan_amount:.2f}")
            st.metric("–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç—ë–∂ (‚Ç∏)", f"{monthly_payment:.2f}")
            st.markdown(f"**–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞**: 22,5% –≥–æ–¥–æ–≤—ã—Ö")

            button_color = "#FF0000" if probability < 60 else "#00A859"
            st.markdown(f"""
                <style>
                .stButton>button {{
                    background-color: {button_color} !important;
                    transition: background-color 0.3s;
                }}
                </style>
            """, unsafe_allow_html=True)
            if approved:
                st.link_button("–û—Ñ–æ—Ä–º–∏—Ç—å –∫—Ä–µ–¥–∏—Ç –æ–Ω–ª–∞–π–Ω", "https://cabinet.bcc.kz/loans/apply")
            else:
                st.subheader("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
                free_balance = income - loan_payments
                max_payment = free_balance * 0.4
                new_term = int(loan_amount / max_payment) + 1 if max_payment > 0 else loan_term_months
                new_amount = max_payment * loan_term_months
                st.write(f"- –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å —Å—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ {new_term} –º–µ—Å—è—Ü–µ–≤, —á—Ç–æ–±—ã —Å–Ω–∏–∑–∏—Ç—å –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç—ë–∂.")
                st.write(f"- –ò–ª–∏ —É–º–µ–Ω—å—à–∏—Ç–µ —Å—É–º–º—É –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ {new_amount:.2f} ‚Ç∏, —á—Ç–æ–±—ã —É–ª–æ–∂–∏—Ç—å—Å—è –≤ –≤–∞—à –±—é–¥–∂–µ—Ç.")
                st.link_button("–ü–æ–¥–æ–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –∫—Ä–µ–¥–∏—Ç", "https://bcc.kz/loans")

# –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: –ö—Ä–µ–¥–∏—Ç—ã –¥–ª—è –±–∏–∑–Ω–µ—Å–∞
elif page == "–ö—Ä–µ–¥–∏—Ç—ã –¥–ª—è –±–∏–∑–Ω–µ—Å–∞":
    st.markdown("<h1 style='font-weight: 700;'>Credit Coach BCC</h1>", unsafe_allow_html=True)
    st.markdown("""
    <h3 class='center-text'>
    –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —É—Å–ª–æ–≤–∏—è –∫—Ä–µ–¥–∏—Ç–∞ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞
    </h3>
    """, unsafe_allow_html=True)

    with st.form("business_form"):
        st.markdown("**–î–∞–Ω–Ω—ã–µ –æ –±–∏–∑–Ω–µ—Å–µ**")
        business_type = st.selectbox("–¢–∏–ø –±–∏–∑–Ω–µ—Å–∞", ["–ò–ü", "–¢–û–û"])
        purpose = st.selectbox("–¶–µ–ª—å –∫—Ä–µ–¥–∏—Ç–∞", ["–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±–æ—Ä–æ—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤", "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏"])
        loan_amount = st.number_input("–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ (‚Ç∏)", min_value=150000, value=5000000, step=10000)
        loan_term_months = st.slider("–°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ (–º–µ—Å—è—Ü—ã)", 6, 120, 36)

        st.markdown("**–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ**")
        iin = st.text_input("–ò–ò–ù/–ë–ò–ù (12 —Ü–∏—Ñ—Ä, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)", max_chars=12)
        if not iin or len(iin) != 12 or not iin.isdigit():
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ò–ò–ù/–ë–ò–ù (12 —Ü–∏—Ñ—Ä).")

        cols = st.columns(2)
        with cols[0]:
            income = st.number_input("–î–æ—Ö–æ–¥—ã –±–∏–∑–Ω–µ—Å–∞ (‚Ç∏/–º–µ—Å—è—Ü)", min_value=0, value=1000000, step=1000)
        with cols[1]:
            loan_payments = st.number_input("–ü–ª–∞—Ç–µ–∂–∏ –ø–æ —Ç–µ–∫—É—â–∏–º –∫—Ä–µ–¥–∏—Ç–∞–º (‚Ç∏/–º–µ—Å—è—Ü)", min_value=0, value=20000, step=1000)

        submitted = st.form_submit_button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å")
        if submitted and (not iin or len(iin) != 12 or not iin.isdigit()):
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–µ –ò–ò–ù/–ë–ò–ù –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
            submitted = False

    if submitted:
        monthly_payment, approved, probability, error = business_loan_calculation(
            loan_amount, loan_term_months, income, loan_payments, business_type, purpose, iin
        )

        st.header("–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏—è –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏")
        if error:
            st.error(error)
        else:
            if approved:
                st.markdown("**–ö—Ä–µ–¥–∏—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–¥–æ–±—Ä–µ–Ω ‚úÖ**", unsafe_allow_html=True)
            else:
                st.markdown("**–ö—Ä–µ–¥–∏—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –æ–¥–æ–±—Ä–µ–Ω ‚ùå**", unsafe_allow_html=True)

            color_class = "red" if probability < 60 else ""
            st.markdown(f"""
                <div class="approval-circle {color_class}">{probability:.0f}%</div>
                <p class="approval-text {color_class}">–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏—è</p>
            """, unsafe_allow_html=True)

            st.metric("–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç—ë–∂ (‚Ç∏)", f"{monthly_payment:.2f}")
            st.markdown(f"**–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞**: 24,45% –≥–æ–¥–æ–≤—ã—Ö")

            button_color = "#FF0000" if probability < 60 else "#00A859"
            st.markdown(f"""
                <style>
                .stButton>button {{
                    background-color: {button_color} !important;
                    transition: background-color 0.3s;
                }}
                </style>
            """, unsafe_allow_html=True)
            if approved:
                st.link_button("–û—Ñ–æ—Ä–º–∏—Ç—å –∫—Ä–µ–¥–∏—Ç –æ–Ω–ª–∞–π–Ω", "https://cabinet.bcc.kz/loans/apply")
            else:
                st.subheader("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
                free_balance = income - loan_payments
                max_payment = free_balance * 0.4
                new_term = int(loan_amount / max_payment) + 1 if max_payment > 0 else loan_term_months
                new_amount = max_payment * loan_term_months
                st.write(f"- –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å —Å—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ {new_term} –º–µ—Å—è—Ü–µ–≤, —á—Ç–æ–±—ã —Å–Ω–∏–∑–∏—Ç—å –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç—ë–∂.")
                st.write(f"- –ò–ª–∏ —É–º–µ–Ω—å—à–∏—Ç–µ —Å—É–º–º—É –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ {new_amount:.2f} ‚Ç∏, —á—Ç–æ–±—ã —É–ª–æ–∂–∏—Ç—å—Å—è –≤ –≤–∞—à –±—é–¥–∂–µ—Ç.")
                st.link_button("–ü–æ–¥–æ–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –∫—Ä–µ–¥–∏—Ç", "https://bcc.kz/loans")

# –ö–∞—Ä—Ç–∞ –æ—Ç–¥–µ–ª–µ–Ω–∏–π –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã
st.markdown("---")
st.subheader("–ù–∞–π–¥–∏—Ç–µ –±–ª–∏–∂–∞–π—à–µ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ –ë–¶–ö")
st.markdown("""
<iframe src="https://www.google.com/maps/embed?pb=!1m16!1m12!1m3!1d159220.4096707107!2d76.81924257070312!3d43.2389498!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!2m1!1s%D0%91%D0%B0%D0%BD%D0%BA%20%D0%A6%D0%B5%D0%BD%D1%82%D1%80%D0%9A%D1%80%D0%B5%D0%B4%D0%B8%D1%82%20%D0%90%D0%BB%D0%BC%D0%B0%D1%82%D1%8B!5e0!3m2!1sru!2skz!4v1732071234567!5m2!1sru!2skz" 
width="100%" height="450" style="border:0;" allowfullscreen="" loading="lazy"></iframe>
""", unsafe_allow_html=True)

st.subheader("–ö–æ–Ω—Ç–∞–∫—Ç—ã –ë–¶–ö")
st.markdown("""
- **–ö–æ–ª–ª-—Ü–µ–Ω—Ç—Ä**: 505 (—Å –º–æ–±–∏–ª—å–Ω–æ–≥–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ)  
- **–¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –∑–≤–æ–Ω–∫–æ–≤**: +7 (727) 244-35-55  
- **Email**: info@bcc.kz  
- **–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç**: [www.bcc.kz](https://www.bcc.kz)
""")

# –ß–∞—Ç-–±–æ—Ç
st.markdown("""
<div class="chatbot-button" id="chatbot-button" onclick="toggleChatbot()">
    –ß–∞—Ç
</div>

<div class="chatbot" id="chatbot-window" style="display: none;">
    <div class="chatbot-header">
        –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ë–¶–ö
        <button onclick="toggleChatbot()" style="float: right; background: none; border: none; color: white; cursor: pointer;">‚úñ</button>
    </div>
    <div class="chatbot-body" id="chatbot-body">
        <div class="chatbot-message bot">–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?</div>
    </div>
    <div class="chatbot-input">
        <input type="text" id="chatbot-input" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...">
        <button onclick="sendMessage()">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
    </div>
</div>

<script>
function toggleChatbot() {
    var chatbotWindow = document.getElementById("chatbot-window");
    var chatbotButton = document.getElementById("chatbot-button");
    if (chatbotWindow.style.display === "none") {
        chatbotWindow.style.display = "block";
        chatbotButton.style.display = "none";
    } else {
        chatbotWindow.style.display = "none";
        chatbotButton.style.display = "flex";
    }
}

function sendMessage() {
    var input = document.getElementById("chatbot-input");
    var message = input.value.trim();
    if (message === "") return;

    var chatBody = document.getElementById("chatbot-body");
    chatBody.innerHTML += '<div class="chatbot-message user">' + message + '</div>';

    var response = "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å! –ü–æ–∫–∞ —è –º–æ–≥—É —Ç–æ–ª—å–∫–æ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å –≤–∞—Å –≤ –∫–æ–ª–ª-—Ü–µ–Ω—Ç—Ä: 505.";
    chatBody.innerHTML += '<div class="chatbot-message bot">' + response + '</div>';

    input.value = "";
    chatBody.scrollTop = chatBody.scrollHeight;
}

document.getElementById("chatbot-input").addEventListener("keypress", function(event) {
    if (event.key === "Enter") {
        sendMessage();
    }
});
</script>
""", unsafe_allow_html=True)

st.markdown("---")
st.markdown("¬© 2025 –ë–∞–Ω–∫ –¶–µ–Ω—Ç—Ä–ö—Ä–µ–¥–∏—Ç. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.")